   0  $accept : %entry% $end

   1  program : exp EOF

   2  exp : NIL
   3      | LPAREN expseq RPAREN
   4      | ID LPAREN funcexpseq RPAREN
   5      | ID LPAREN RPAREN
   6      | arith
   7      | comp
   8      | bool
   9      | ID LBRACE idexpseq RBRACE
  10      | ID LBRACE RBRACE
  11      | ID LBRACK exp RBRACK OF exp
  12      | IF exp THEN exp ELSE exp
  13      | IF exp THEN exp
  14      | WHILE exp DO exp
  15      | FOR ID ASSIGN exp TO exp DO exp
  16      | BREAK
  17      | LET decs IN expseq END
  18      | INT
  19      | STRING
  20      | lvalue
  21      | stmt
  22      | LPAREN RPAREN

  23  stmt : ID ASSIGN exp
  24       | lvalue ASSIGN exp

  25  funcexpseq : exp
  26             | exp COMMA funcexpseq

  27  idexpseq : ID EQ exp
  28           | ID EQ exp COMMA idexpseq

  29  arith : exp PLUS exp
  30        | exp MINUS exp
  31        | exp TIMES exp
  32        | exp DIVIDE exp
  33        | MINUS exp

  34  comp : exp EQ exp
  35       | exp LE exp
  36       | exp GE exp
  37       | exp GT exp
  38       | exp LT exp
  39       | exp NEQ exp

  40  bool : exp AND exp
  41       | exp OR exp

  42  expseq : exp
  43         | exp SEMICOLON expseq

  44  decs : tydecs not_tydecs
  45       | vardec decs
  46       | fundecs not_fundecs
  47       |

  48  not_fundecs : tydecs not_tydecs
  49              | vardec decs
  50              |

  51  not_tydecs : fundecs not_fundecs
  52             | vardec decs
  53             |

  54  dec : tydecs
  55      | vardec
  56      | fundecs

  57  tydecs : tydec tydecs
  58         | tydec

  59  tydec : TYPE type_id EQ ty

  60  ty : type_id
  61     | LBRACE tyfields RBRACE
  62     | ARRAY OF type_id

  63  tyfields : ID COLON type_id
  64           | ID COLON type_id COMMA tyfields
  65           |

  66  vardec : VAR ID ASSIGN exp
  67         | VAR ID COLON type_id ASSIGN exp

  68  fundecs : fundec fundecs
  69          | fundec

  70  fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp
  71         | FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp

  72  lvalue : ID
  73         | lvalue DOT ID
  74         | lvalue LBRACK exp RBRACK
  75         | ID LBRACK exp RBRACK

  76  type_id : ID

  77  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (77)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	program  goto 14
	exp  goto 15
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 2
	$accept : %entry% . $end  (0)

	$end  accept


3: shift/reduce conflict (shift 22, reduce 72) on LBRACK
3: shift/reduce conflict (shift 24, reduce 72) on ASSIGN
state 3
	exp : ID . LPAREN funcexpseq RPAREN  (4)
	exp : ID . LPAREN RPAREN  (5)
	exp : ID . LBRACE idexpseq RBRACE  (9)
	exp : ID . LBRACE RBRACE  (10)
	exp : ID . LBRACK exp RBRACK OF exp  (11)
	stmt : ID . ASSIGN exp  (23)
	lvalue : ID .  (72)
	lvalue : ID . LBRACK exp RBRACK  (75)

	LPAREN  shift 21
	LBRACK  shift 22
	LBRACE  shift 23
	ASSIGN  shift 24
	EOF  reduce 72
	COMMA  reduce 72
	SEMICOLON  reduce 72
	RPAREN  reduce 72
	RBRACK  reduce 72
	RBRACE  reduce 72
	DOT  reduce 72
	PLUS  reduce 72
	MINUS  reduce 72
	TIMES  reduce 72
	DIVIDE  reduce 72
	EQ  reduce 72
	NEQ  reduce 72
	LT  reduce 72
	LE  reduce 72
	GT  reduce 72
	GE  reduce 72
	AND  reduce 72
	OR  reduce 72
	THEN  reduce 72
	ELSE  reduce 72
	TO  reduce 72
	DO  reduce 72
	IN  reduce 72
	END  reduce 72
	FUNCTION  reduce 72
	VAR  reduce 72
	TYPE  reduce 72


state 4
	exp : INT .  (18)

	.  reduce 18


state 5
	exp : STRING .  (19)

	.  reduce 19


state 6
	exp : LPAREN . expseq RPAREN  (3)
	exp : LPAREN . RPAREN  (22)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	RPAREN  shift 25
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 26
	expseq  goto 27
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 7
	arith : MINUS . exp  (33)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 28
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 8
	exp : IF . exp THEN exp ELSE exp  (12)
	exp : IF . exp THEN exp  (13)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 29
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 9
	exp : WHILE . exp DO exp  (14)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 30
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 10
	exp : FOR . ID ASSIGN exp TO exp DO exp  (15)

	ID  shift 31
	.  error


state 11
	exp : LET . decs IN expseq END  (17)
	decs : .  (47)

	FUNCTION  shift 32
	VAR  shift 33
	TYPE  shift 34
	IN  reduce 47

	decs  goto 35
	tydecs  goto 36
	vardec  goto 37
	fundecs  goto 38
	tydec  goto 39
	fundec  goto 40


state 12
	exp : BREAK .  (16)

	.  reduce 16


state 13
	exp : NIL .  (2)

	.  reduce 2


state 14
	%entry% : '\001' program .  (77)

	.  reduce 77


state 15
	program : exp . EOF  (1)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	EOF  shift 41
	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	.  error


state 16
	exp : arith .  (6)

	.  reduce 6


state 17
	exp : comp .  (7)

	.  reduce 7


state 18
	exp : bool .  (8)

	.  reduce 8


state 19
	exp : lvalue .  (20)
	stmt : lvalue . ASSIGN exp  (24)
	lvalue : lvalue . DOT ID  (73)
	lvalue : lvalue . LBRACK exp RBRACK  (74)

	LBRACK  shift 54
	DOT  shift 55
	ASSIGN  shift 56
	EOF  reduce 20
	COMMA  reduce 20
	SEMICOLON  reduce 20
	RPAREN  reduce 20
	RBRACK  reduce 20
	RBRACE  reduce 20
	PLUS  reduce 20
	MINUS  reduce 20
	TIMES  reduce 20
	DIVIDE  reduce 20
	EQ  reduce 20
	NEQ  reduce 20
	LT  reduce 20
	LE  reduce 20
	GT  reduce 20
	GE  reduce 20
	AND  reduce 20
	OR  reduce 20
	THEN  reduce 20
	ELSE  reduce 20
	TO  reduce 20
	DO  reduce 20
	IN  reduce 20
	END  reduce 20
	FUNCTION  reduce 20
	VAR  reduce 20
	TYPE  reduce 20


state 20
	exp : stmt .  (21)

	.  reduce 21


state 21
	exp : ID LPAREN . funcexpseq RPAREN  (4)
	exp : ID LPAREN . RPAREN  (5)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	RPAREN  shift 57
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 58
	funcexpseq  goto 59
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 22
	exp : ID LBRACK . exp RBRACK OF exp  (11)
	lvalue : ID LBRACK . exp RBRACK  (75)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 60
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 23
	exp : ID LBRACE . idexpseq RBRACE  (9)
	exp : ID LBRACE . RBRACE  (10)

	ID  shift 61
	RBRACE  shift 62
	.  error

	idexpseq  goto 63


state 24
	stmt : ID ASSIGN . exp  (23)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 64
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 25
	exp : LPAREN RPAREN .  (22)

	.  reduce 22


state 26
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	expseq : exp .  (42)
	expseq : exp . SEMICOLON expseq  (43)

	SEMICOLON  shift 65
	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	RPAREN  reduce 42
	END  reduce 42


state 27
	exp : LPAREN expseq . RPAREN  (3)

	RPAREN  shift 66
	.  error


state 28
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	arith : MINUS exp .  (33)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	.  reduce 33


state 29
	exp : IF exp . THEN exp ELSE exp  (12)
	exp : IF exp . THEN exp  (13)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	THEN  shift 67
	.  error


state 30
	exp : WHILE exp . DO exp  (14)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	DO  shift 68
	.  error


state 31
	exp : FOR ID . ASSIGN exp TO exp DO exp  (15)

	ASSIGN  shift 69
	.  error


state 32
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp  (70)
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON type_id EQ exp  (71)

	ID  shift 70
	.  error


state 33
	vardec : VAR . ID ASSIGN exp  (66)
	vardec : VAR . ID COLON type_id ASSIGN exp  (67)

	ID  shift 71
	.  error


state 34
	tydec : TYPE . type_id EQ ty  (59)

	ID  shift 72
	.  error

	type_id  goto 73


state 35
	exp : LET decs . IN expseq END  (17)

	IN  shift 74
	.  error


state 36
	decs : tydecs . not_tydecs  (44)
	not_tydecs : .  (53)

	FUNCTION  shift 32
	VAR  shift 33
	IN  reduce 53

	not_tydecs  goto 75
	vardec  goto 76
	fundecs  goto 77
	fundec  goto 40


state 37
	decs : vardec . decs  (45)
	decs : .  (47)

	FUNCTION  shift 32
	VAR  shift 33
	TYPE  shift 34
	IN  reduce 47

	decs  goto 78
	tydecs  goto 36
	vardec  goto 37
	fundecs  goto 38
	tydec  goto 39
	fundec  goto 40


state 38
	decs : fundecs . not_fundecs  (46)
	not_fundecs : .  (50)

	VAR  shift 33
	TYPE  shift 34
	IN  reduce 50

	tydecs  goto 79
	vardec  goto 80
	not_fundecs  goto 81
	tydec  goto 39


state 39
	tydecs : tydec . tydecs  (57)
	tydecs : tydec .  (58)

	TYPE  shift 34
	IN  reduce 58
	FUNCTION  reduce 58
	VAR  reduce 58

	tydecs  goto 82
	tydec  goto 39


state 40
	fundecs : fundec . fundecs  (68)
	fundecs : fundec .  (69)

	FUNCTION  shift 32
	IN  reduce 69
	VAR  reduce 69
	TYPE  reduce 69

	fundecs  goto 83
	fundec  goto 40


state 41
	program : exp EOF .  (1)

	.  reduce 1


state 42
	arith : exp PLUS . exp  (29)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 84
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 43
	arith : exp MINUS . exp  (30)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 85
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 44
	arith : exp TIMES . exp  (31)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 86
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 45
	arith : exp DIVIDE . exp  (32)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 87
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 46
	comp : exp EQ . exp  (34)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 88
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 47
	comp : exp NEQ . exp  (39)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 89
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 48
	comp : exp LT . exp  (38)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 90
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 49
	comp : exp LE . exp  (35)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 91
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 50
	comp : exp GT . exp  (37)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 92
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 51
	comp : exp GE . exp  (36)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 93
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 52
	bool : exp AND . exp  (40)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 94
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 53
	bool : exp OR . exp  (41)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 95
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 54
	lvalue : lvalue LBRACK . exp RBRACK  (74)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 96
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 55
	lvalue : lvalue DOT . ID  (73)

	ID  shift 97
	.  error


state 56
	stmt : lvalue ASSIGN . exp  (24)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 98
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 57
	exp : ID LPAREN RPAREN .  (5)

	.  reduce 5


state 58
	funcexpseq : exp .  (25)
	funcexpseq : exp . COMMA funcexpseq  (26)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	COMMA  shift 99
	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	RPAREN  reduce 25


state 59
	exp : ID LPAREN funcexpseq . RPAREN  (4)

	RPAREN  shift 100
	.  error


state 60
	exp : ID LBRACK exp . RBRACK OF exp  (11)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	lvalue : ID LBRACK exp . RBRACK  (75)

	RBRACK  shift 101
	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	.  error


state 61
	idexpseq : ID . EQ exp  (27)
	idexpseq : ID . EQ exp COMMA idexpseq  (28)

	EQ  shift 102
	.  error


state 62
	exp : ID LBRACE RBRACE .  (10)

	.  reduce 10


state 63
	exp : ID LBRACE idexpseq . RBRACE  (9)

	RBRACE  shift 103
	.  error


state 64
	stmt : ID ASSIGN exp .  (23)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	EOF  reduce 23
	COMMA  reduce 23
	SEMICOLON  reduce 23
	RPAREN  reduce 23
	RBRACK  reduce 23
	RBRACE  reduce 23
	THEN  reduce 23
	ELSE  reduce 23
	TO  reduce 23
	DO  reduce 23
	IN  reduce 23
	END  reduce 23
	FUNCTION  reduce 23
	VAR  reduce 23
	TYPE  reduce 23


state 65
	expseq : exp SEMICOLON . expseq  (43)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 26
	expseq  goto 104
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 66
	exp : LPAREN expseq RPAREN .  (3)

	.  reduce 3


state 67
	exp : IF exp THEN . exp ELSE exp  (12)
	exp : IF exp THEN . exp  (13)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 105
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 68
	exp : WHILE exp DO . exp  (14)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 106
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 69
	exp : FOR ID ASSIGN . exp TO exp DO exp  (15)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 107
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 70
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp  (70)
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON type_id EQ exp  (71)

	LPAREN  shift 108
	.  error


state 71
	vardec : VAR ID . ASSIGN exp  (66)
	vardec : VAR ID . COLON type_id ASSIGN exp  (67)

	COLON  shift 109
	ASSIGN  shift 110
	.  error


state 72
	type_id : ID .  (76)

	.  reduce 76


state 73
	tydec : TYPE type_id . EQ ty  (59)

	EQ  shift 111
	.  error


state 74
	exp : LET decs IN . expseq END  (17)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 26
	expseq  goto 112
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 75
	decs : tydecs not_tydecs .  (44)

	.  reduce 44


state 76
	not_tydecs : vardec . decs  (52)
	decs : .  (47)

	FUNCTION  shift 32
	VAR  shift 33
	TYPE  shift 34
	IN  reduce 47

	decs  goto 113
	tydecs  goto 36
	vardec  goto 37
	fundecs  goto 38
	tydec  goto 39
	fundec  goto 40


state 77
	not_tydecs : fundecs . not_fundecs  (51)
	not_fundecs : .  (50)

	VAR  shift 33
	TYPE  shift 34
	IN  reduce 50

	tydecs  goto 79
	vardec  goto 80
	not_fundecs  goto 114
	tydec  goto 39


state 78
	decs : vardec decs .  (45)

	.  reduce 45


state 79
	not_fundecs : tydecs . not_tydecs  (48)
	not_tydecs : .  (53)

	FUNCTION  shift 32
	VAR  shift 33
	IN  reduce 53

	not_tydecs  goto 115
	vardec  goto 76
	fundecs  goto 77
	fundec  goto 40


state 80
	not_fundecs : vardec . decs  (49)
	decs : .  (47)

	FUNCTION  shift 32
	VAR  shift 33
	TYPE  shift 34
	IN  reduce 47

	decs  goto 116
	tydecs  goto 36
	vardec  goto 37
	fundecs  goto 38
	tydec  goto 39
	fundec  goto 40


state 81
	decs : fundecs not_fundecs .  (46)

	.  reduce 46


state 82
	tydecs : tydec tydecs .  (57)

	.  reduce 57


state 83
	fundecs : fundec fundecs .  (68)

	.  reduce 68


state 84
	arith : exp . PLUS exp  (29)
	arith : exp PLUS exp .  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 29
	COMMA  reduce 29
	SEMICOLON  reduce 29
	RPAREN  reduce 29
	RBRACK  reduce 29
	RBRACE  reduce 29
	PLUS  reduce 29
	MINUS  reduce 29
	EQ  reduce 29
	NEQ  reduce 29
	LT  reduce 29
	LE  reduce 29
	GT  reduce 29
	GE  reduce 29
	AND  reduce 29
	OR  reduce 29
	THEN  reduce 29
	ELSE  reduce 29
	TO  reduce 29
	DO  reduce 29
	IN  reduce 29
	END  reduce 29
	FUNCTION  reduce 29
	VAR  reduce 29
	TYPE  reduce 29


state 85
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp MINUS exp .  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 30
	COMMA  reduce 30
	SEMICOLON  reduce 30
	RPAREN  reduce 30
	RBRACK  reduce 30
	RBRACE  reduce 30
	PLUS  reduce 30
	MINUS  reduce 30
	EQ  reduce 30
	NEQ  reduce 30
	LT  reduce 30
	LE  reduce 30
	GT  reduce 30
	GE  reduce 30
	AND  reduce 30
	OR  reduce 30
	THEN  reduce 30
	ELSE  reduce 30
	TO  reduce 30
	DO  reduce 30
	IN  reduce 30
	END  reduce 30
	FUNCTION  reduce 30
	VAR  reduce 30
	TYPE  reduce 30


state 86
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp TIMES exp .  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	.  reduce 31


state 87
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	arith : exp DIVIDE exp .  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	.  reduce 32


state 88
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp EQ exp .  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 34
	COMMA  reduce 34
	SEMICOLON  reduce 34
	RPAREN  reduce 34
	RBRACK  reduce 34
	RBRACE  reduce 34
	AND  reduce 34
	OR  reduce 34
	THEN  reduce 34
	ELSE  reduce 34
	TO  reduce 34
	DO  reduce 34
	IN  reduce 34
	END  reduce 34
	FUNCTION  reduce 34
	VAR  reduce 34
	TYPE  reduce 34


state 89
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	comp : exp NEQ exp .  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 39
	COMMA  reduce 39
	SEMICOLON  reduce 39
	RPAREN  reduce 39
	RBRACK  reduce 39
	RBRACE  reduce 39
	AND  reduce 39
	OR  reduce 39
	THEN  reduce 39
	ELSE  reduce 39
	TO  reduce 39
	DO  reduce 39
	IN  reduce 39
	END  reduce 39
	FUNCTION  reduce 39
	VAR  reduce 39
	TYPE  reduce 39


state 90
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp LT exp .  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 38
	COMMA  reduce 38
	SEMICOLON  reduce 38
	RPAREN  reduce 38
	RBRACK  reduce 38
	RBRACE  reduce 38
	AND  reduce 38
	OR  reduce 38
	THEN  reduce 38
	ELSE  reduce 38
	TO  reduce 38
	DO  reduce 38
	IN  reduce 38
	END  reduce 38
	FUNCTION  reduce 38
	VAR  reduce 38
	TYPE  reduce 38


state 91
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp LE exp .  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 35
	COMMA  reduce 35
	SEMICOLON  reduce 35
	RPAREN  reduce 35
	RBRACK  reduce 35
	RBRACE  reduce 35
	AND  reduce 35
	OR  reduce 35
	THEN  reduce 35
	ELSE  reduce 35
	TO  reduce 35
	DO  reduce 35
	IN  reduce 35
	END  reduce 35
	FUNCTION  reduce 35
	VAR  reduce 35
	TYPE  reduce 35


state 92
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp GT exp .  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 37
	COMMA  reduce 37
	SEMICOLON  reduce 37
	RPAREN  reduce 37
	RBRACK  reduce 37
	RBRACE  reduce 37
	AND  reduce 37
	OR  reduce 37
	THEN  reduce 37
	ELSE  reduce 37
	TO  reduce 37
	DO  reduce 37
	IN  reduce 37
	END  reduce 37
	FUNCTION  reduce 37
	VAR  reduce 37
	TYPE  reduce 37


state 93
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp GE exp .  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EOF  reduce 36
	COMMA  reduce 36
	SEMICOLON  reduce 36
	RPAREN  reduce 36
	RBRACK  reduce 36
	RBRACE  reduce 36
	AND  reduce 36
	OR  reduce 36
	THEN  reduce 36
	ELSE  reduce 36
	TO  reduce 36
	DO  reduce 36
	IN  reduce 36
	END  reduce 36
	FUNCTION  reduce 36
	VAR  reduce 36
	TYPE  reduce 36


state 94
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp AND exp .  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	EOF  reduce 40
	COMMA  reduce 40
	SEMICOLON  reduce 40
	RPAREN  reduce 40
	RBRACK  reduce 40
	RBRACE  reduce 40
	AND  reduce 40
	OR  reduce 40
	THEN  reduce 40
	ELSE  reduce 40
	TO  reduce 40
	DO  reduce 40
	IN  reduce 40
	END  reduce 40
	FUNCTION  reduce 40
	VAR  reduce 40
	TYPE  reduce 40


state 95
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	bool : exp OR exp .  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	EOF  reduce 41
	COMMA  reduce 41
	SEMICOLON  reduce 41
	RPAREN  reduce 41
	RBRACK  reduce 41
	RBRACE  reduce 41
	OR  reduce 41
	THEN  reduce 41
	ELSE  reduce 41
	TO  reduce 41
	DO  reduce 41
	IN  reduce 41
	END  reduce 41
	FUNCTION  reduce 41
	VAR  reduce 41
	TYPE  reduce 41


state 96
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	lvalue : lvalue LBRACK exp . RBRACK  (74)

	RBRACK  shift 117
	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	.  error


state 97
	lvalue : lvalue DOT ID .  (73)

	.  reduce 73


state 98
	stmt : lvalue ASSIGN exp .  (24)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	EOF  reduce 24
	COMMA  reduce 24
	SEMICOLON  reduce 24
	RPAREN  reduce 24
	RBRACK  reduce 24
	RBRACE  reduce 24
	THEN  reduce 24
	ELSE  reduce 24
	TO  reduce 24
	DO  reduce 24
	IN  reduce 24
	END  reduce 24
	FUNCTION  reduce 24
	VAR  reduce 24
	TYPE  reduce 24


state 99
	funcexpseq : exp COMMA . funcexpseq  (26)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 58
	funcexpseq  goto 118
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 100
	exp : ID LPAREN funcexpseq RPAREN .  (4)

	.  reduce 4


state 101
	exp : ID LBRACK exp RBRACK . OF exp  (11)
	lvalue : ID LBRACK exp RBRACK .  (75)

	OF  shift 119
	EOF  reduce 75
	COMMA  reduce 75
	SEMICOLON  reduce 75
	RPAREN  reduce 75
	LBRACK  reduce 75
	RBRACK  reduce 75
	RBRACE  reduce 75
	DOT  reduce 75
	PLUS  reduce 75
	MINUS  reduce 75
	TIMES  reduce 75
	DIVIDE  reduce 75
	EQ  reduce 75
	NEQ  reduce 75
	LT  reduce 75
	LE  reduce 75
	GT  reduce 75
	GE  reduce 75
	AND  reduce 75
	OR  reduce 75
	ASSIGN  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	TO  reduce 75
	DO  reduce 75
	IN  reduce 75
	END  reduce 75
	FUNCTION  reduce 75
	VAR  reduce 75
	TYPE  reduce 75


state 102
	idexpseq : ID EQ . exp  (27)
	idexpseq : ID EQ . exp COMMA idexpseq  (28)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 120
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 103
	exp : ID LBRACE idexpseq RBRACE .  (9)

	.  reduce 9


state 104
	expseq : exp SEMICOLON expseq .  (43)

	.  reduce 43


state 105
	exp : IF exp THEN exp . ELSE exp  (12)
	exp : IF exp THEN exp .  (13)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	ELSE  shift 121
	EOF  reduce 13
	COMMA  reduce 13
	SEMICOLON  reduce 13
	RPAREN  reduce 13
	RBRACK  reduce 13
	RBRACE  reduce 13
	THEN  reduce 13
	TO  reduce 13
	DO  reduce 13
	IN  reduce 13
	END  reduce 13
	FUNCTION  reduce 13
	VAR  reduce 13
	TYPE  reduce 13


state 106
	exp : WHILE exp DO exp .  (14)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	EOF  reduce 14
	COMMA  reduce 14
	SEMICOLON  reduce 14
	RPAREN  reduce 14
	RBRACK  reduce 14
	RBRACE  reduce 14
	THEN  reduce 14
	ELSE  reduce 14
	TO  reduce 14
	DO  reduce 14
	IN  reduce 14
	END  reduce 14
	FUNCTION  reduce 14
	VAR  reduce 14
	TYPE  reduce 14


state 107
	exp : FOR ID ASSIGN exp . TO exp DO exp  (15)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	TO  shift 122
	.  error


state 108
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp  (70)
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON type_id EQ exp  (71)
	tyfields : .  (65)

	ID  shift 123
	RPAREN  reduce 65

	tyfields  goto 124


state 109
	vardec : VAR ID COLON . type_id ASSIGN exp  (67)

	ID  shift 72
	.  error

	type_id  goto 125


state 110
	vardec : VAR ID ASSIGN . exp  (66)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 126
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 111
	tydec : TYPE type_id EQ . ty  (59)

	ID  shift 72
	LBRACE  shift 127
	ARRAY  shift 128
	.  error

	type_id  goto 129
	ty  goto 130


state 112
	exp : LET decs IN expseq . END  (17)

	END  shift 131
	.  error


state 113
	not_tydecs : vardec decs .  (52)

	.  reduce 52


state 114
	not_tydecs : fundecs not_fundecs .  (51)

	.  reduce 51


state 115
	not_fundecs : tydecs not_tydecs .  (48)

	.  reduce 48


state 116
	not_fundecs : vardec decs .  (49)

	.  reduce 49


state 117
	lvalue : lvalue LBRACK exp RBRACK .  (74)

	.  reduce 74


state 118
	funcexpseq : exp COMMA funcexpseq .  (26)

	.  reduce 26


state 119
	exp : ID LBRACK exp RBRACK OF . exp  (11)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 132
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 120
	idexpseq : ID EQ exp .  (27)
	idexpseq : ID EQ exp . COMMA idexpseq  (28)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	COMMA  shift 133
	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	RBRACE  reduce 27


state 121
	exp : IF exp THEN exp ELSE . exp  (12)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 134
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 122
	exp : FOR ID ASSIGN exp TO . exp DO exp  (15)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 135
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 123
	tyfields : ID . COLON type_id  (63)
	tyfields : ID . COLON type_id COMMA tyfields  (64)

	COLON  shift 136
	.  error


state 124
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp  (70)
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON type_id EQ exp  (71)

	RPAREN  shift 137
	.  error


state 125
	vardec : VAR ID COLON type_id . ASSIGN exp  (67)

	ASSIGN  shift 138
	.  error


state 126
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	vardec : VAR ID ASSIGN exp .  (66)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	IN  reduce 66
	FUNCTION  reduce 66
	VAR  reduce 66
	TYPE  reduce 66


state 127
	ty : LBRACE . tyfields RBRACE  (61)
	tyfields : .  (65)

	ID  shift 123
	RBRACE  reduce 65

	tyfields  goto 139


state 128
	ty : ARRAY . OF type_id  (62)

	OF  shift 140
	.  error


state 129
	ty : type_id .  (60)

	.  reduce 60


state 130
	tydec : TYPE type_id EQ ty .  (59)

	.  reduce 59


state 131
	exp : LET decs IN expseq END .  (17)

	.  reduce 17


state 132
	exp : ID LBRACK exp RBRACK OF exp .  (11)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	EOF  reduce 11
	COMMA  reduce 11
	SEMICOLON  reduce 11
	RPAREN  reduce 11
	RBRACK  reduce 11
	RBRACE  reduce 11
	THEN  reduce 11
	ELSE  reduce 11
	TO  reduce 11
	DO  reduce 11
	IN  reduce 11
	END  reduce 11
	FUNCTION  reduce 11
	VAR  reduce 11
	TYPE  reduce 11


state 133
	idexpseq : ID EQ exp COMMA . idexpseq  (28)

	ID  shift 61
	.  error

	idexpseq  goto 141


state 134
	exp : IF exp THEN exp ELSE exp .  (12)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	EOF  reduce 12
	COMMA  reduce 12
	SEMICOLON  reduce 12
	RPAREN  reduce 12
	RBRACK  reduce 12
	RBRACE  reduce 12
	THEN  reduce 12
	ELSE  reduce 12
	TO  reduce 12
	DO  reduce 12
	IN  reduce 12
	END  reduce 12
	FUNCTION  reduce 12
	VAR  reduce 12
	TYPE  reduce 12


state 135
	exp : FOR ID ASSIGN exp TO exp . DO exp  (15)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	DO  shift 142
	.  error


state 136
	tyfields : ID COLON . type_id  (63)
	tyfields : ID COLON . type_id COMMA tyfields  (64)

	ID  shift 72
	.  error

	type_id  goto 143


state 137
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp  (70)
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON type_id EQ exp  (71)

	COLON  shift 144
	EQ  shift 145
	.  error


state 138
	vardec : VAR ID COLON type_id ASSIGN . exp  (67)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 146
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 139
	ty : LBRACE tyfields . RBRACE  (61)

	RBRACE  shift 147
	.  error


state 140
	ty : ARRAY OF . type_id  (62)

	ID  shift 72
	.  error

	type_id  goto 148


state 141
	idexpseq : ID EQ exp COMMA idexpseq .  (28)

	.  reduce 28


state 142
	exp : FOR ID ASSIGN exp TO exp DO . exp  (15)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 149
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 143
	tyfields : ID COLON type_id .  (63)
	tyfields : ID COLON type_id . COMMA tyfields  (64)

	COMMA  shift 150
	RPAREN  reduce 63
	RBRACE  reduce 63


state 144
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . type_id EQ exp  (71)

	ID  shift 72
	.  error

	type_id  goto 151


state 145
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp  (70)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 152
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 146
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	vardec : VAR ID COLON type_id ASSIGN exp .  (67)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	IN  reduce 67
	FUNCTION  reduce 67
	VAR  reduce 67
	TYPE  reduce 67


state 147
	ty : LBRACE tyfields RBRACE .  (61)

	.  reduce 61


state 148
	ty : ARRAY OF type_id .  (62)

	.  reduce 62


state 149
	exp : FOR ID ASSIGN exp TO exp DO exp .  (15)
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	EOF  reduce 15
	COMMA  reduce 15
	SEMICOLON  reduce 15
	RPAREN  reduce 15
	RBRACK  reduce 15
	RBRACE  reduce 15
	THEN  reduce 15
	ELSE  reduce 15
	TO  reduce 15
	DO  reduce 15
	IN  reduce 15
	END  reduce 15
	FUNCTION  reduce 15
	VAR  reduce 15
	TYPE  reduce 15


state 150
	tyfields : ID COLON type_id COMMA . tyfields  (64)
	tyfields : .  (65)

	ID  shift 123
	RPAREN  reduce 65
	RBRACE  reduce 65

	tyfields  goto 153


state 151
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON type_id . EQ exp  (71)

	EQ  shift 154
	.  error


state 152
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (70)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	IN  reduce 70
	FUNCTION  reduce 70
	VAR  reduce 70
	TYPE  reduce 70


state 153
	tyfields : ID COLON type_id COMMA tyfields .  (64)

	.  reduce 64


state 154
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ . exp  (71)

	ID  shift 3
	INT  shift 4
	STRING  shift 5
	LPAREN  shift 6
	MINUS  shift 7
	IF  shift 8
	WHILE  shift 9
	FOR  shift 10
	LET  shift 11
	BREAK  shift 12
	NIL  shift 13
	.  error

	exp  goto 155
	arith  goto 16
	comp  goto 17
	bool  goto 18
	lvalue  goto 19
	stmt  goto 20


state 155
	arith : exp . PLUS exp  (29)
	arith : exp . MINUS exp  (30)
	arith : exp . TIMES exp  (31)
	arith : exp . DIVIDE exp  (32)
	comp : exp . EQ exp  (34)
	comp : exp . LE exp  (35)
	comp : exp . GE exp  (36)
	comp : exp . GT exp  (37)
	comp : exp . LT exp  (38)
	comp : exp . NEQ exp  (39)
	bool : exp . AND exp  (40)
	bool : exp . OR exp  (41)
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp .  (71)

	PLUS  shift 42
	MINUS  shift 43
	TIMES  shift 44
	DIVIDE  shift 45
	EQ  shift 46
	NEQ  shift 47
	LT  shift 48
	LE  shift 49
	GT  shift 50
	GE  shift 51
	AND  shift 52
	OR  shift 53
	IN  reduce 71
	FUNCTION  reduce 71
	VAR  reduce 71
	TYPE  reduce 71


Rules never reduced:
	dec : tydecs  (54)
	dec : vardec  (55)
	dec : fundecs  (56)


State 3 contains 2 shift/reduce conflicts.


48 terminals, 24 nonterminals
78 grammar rules, 156 states
