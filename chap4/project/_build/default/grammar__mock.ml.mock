
type token = 
  | WHILE
  | VAR
  | TYPE
  | TO
  | TIMES
  | THEN
  | STRING of (
# 8 "grammar.mly"
       (string)
# 13 "grammar__mock.ml.mock"
)
  | SEMICOLON
  | RPAREN
  | RBRACK
  | RBRACE
  | PLUS
  | OR
  | OF
  | NIL
  | NEQ
  | MINUS
  | LT
  | LPAREN
  | LET
  | LE
  | LBRACK
  | LBRACE
  | INT of (
# 7 "grammar.mly"
       (int)
# 34 "grammar__mock.ml.mock"
)
  | IN
  | IF
  | ID of (
# 6 "grammar.mly"
       (string)
# 41 "grammar__mock.ml.mock"
)
  | GT
  | GE
  | FUNCTION
  | FOR
  | EQ
  | EOF
  | END
  | ELSE
  | DOT
  | DO
  | DIVIDE
  | COMMA
  | COLON
  | BREAK
  | ASSIGN
  | ARRAY
  | AND

# 1 "grammar.mly"
  
  open Absyn

# 65 "grammar__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_vardec, xv_type_id, xv_tyfields, xv_tydecs, xv_tydec, xv_ty, xv_stmt, xv_program, xv_not_tydecs, xv_not_fundecs, xv_lvalue, xv_idexpseq, xv_fundecs, xv_fundec, xv_funcexpseq, xv_expseq, xv_exp, xv_decs, xv_comp, xv_bool, xv_arith) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 337 "grammar.mly"
                               _6
# 74 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 337 "grammar.mly"
                        _5
# 78 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 337 "grammar.mly"
                _4
# 82 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 337 "grammar.mly"
          _3
# 86 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 337 "grammar.mly"
       _2
# 90 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 94 "grammar__mock.ml.mock"
  )) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 337 "grammar.mly"
   _1
# 98 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 337 "grammar.mly"
                                    ( 
    VarDec {
      name = Symbol.symbol _2;
      escape = ref true;
      typ = Some (_4, _startpos__4_);
      init = _6;
      pos = _startpos
    }
  )
# 111 "grammar__mock.ml.mock"
     : 'tv_vardec) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 328 "grammar.mly"
                 _4
# 116 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 328 "grammar.mly"
          _3
# 120 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 328 "grammar.mly"
       _2
# 124 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 128 "grammar__mock.ml.mock"
  )) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 328 "grammar.mly"
   _1
# 132 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 328 "grammar.mly"
                      ( 
    VarDec {
      name = Symbol.symbol _2;
      escape = ref true;
      typ = None;
      init = _4;
      pos = _startpos
    }
  )
# 145 "grammar__mock.ml.mock"
     : 'tv_vardec) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 382 "grammar.mly"
   _1
# 150 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 154 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 382 "grammar.mly"
       ( Symbol.symbol _1 )
# 159 "grammar__mock.ml.mock"
     : 'tv_type_id) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 325 "grammar.mly"
    ( [] )
# 165 "grammar__mock.ml.mock"
     : 'tv_tyfields) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 318 "grammar.mly"
                          _5
# 170 "grammar__mock.ml.mock"
   : 'tv_tyfields) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 318 "grammar.mly"
                    _4
# 174 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 318 "grammar.mly"
            _3
# 178 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 318 "grammar.mly"
      _2
# 182 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 318 "grammar.mly"
   _1
# 186 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 190 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 318 "grammar.mly"
                                    ( 
    {name = Symbol.symbol _1; 
    escape = ref true; 
    typ = _3; 
    pos = _startpos
    } :: _5
  )
# 201 "grammar__mock.ml.mock"
     : 'tv_tyfields) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 311 "grammar.mly"
            _3
# 206 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 311 "grammar.mly"
      _2
# 210 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 311 "grammar.mly"
   _1
# 214 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 218 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 311 "grammar.mly"
                     ( 
    [{name = Symbol.symbol _1; 
    escape = ref true; 
    typ = _3; 
    pos = _startpos
    }]
  )
# 229 "grammar__mock.ml.mock"
     : 'tv_tyfields) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 294 "grammar.mly"
   _1
# 234 "grammar__mock.ml.mock"
   : 'tv_tydec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 294 "grammar.mly"
          ( [_1] )
# 239 "grammar__mock.ml.mock"
     : 'tv_tydecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 291 "grammar.mly"
         _2
# 244 "grammar__mock.ml.mock"
   : 'tv_tydecs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 291 "grammar.mly"
   _1
# 248 "grammar__mock.ml.mock"
   : 'tv_tydec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 291 "grammar.mly"
                 ( 
    _1 :: _2
  )
# 255 "grammar__mock.ml.mock"
     : 'tv_tydecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 296 "grammar.mly"
                   _4
# 260 "grammar__mock.ml.mock"
   : 'tv_ty) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 296 "grammar.mly"
                _3
# 264 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 296 "grammar.mly"
        _2
# 268 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 296 "grammar.mly"
   _1
# 272 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 296 "grammar.mly"
                       ( 
    {name= _2; ty = _4; pos = _startpos}
  )
# 279 "grammar__mock.ml.mock"
     : 'tv_tydec) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 306 "grammar.mly"
            _3
# 284 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 306 "grammar.mly"
         _2
# 288 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 306 "grammar.mly"
   _1
# 292 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 306 "grammar.mly"
                     ( 
    ArrayTy (_3 , _startpos)
  )
# 299 "grammar__mock.ml.mock"
     : 'tv_ty) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 303 "grammar.mly"
                   _3
# 304 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 303 "grammar.mly"
          _2
# 308 "grammar__mock.ml.mock"
   : 'tv_tyfields) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 303 "grammar.mly"
   _1
# 312 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 303 "grammar.mly"
                           ( 
    RecordTy (_2)
  )
# 319 "grammar__mock.ml.mock"
     : 'tv_ty) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 300 "grammar.mly"
   _1
# 324 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 300 "grammar.mly"
            ( 
    NameTy (_1 , _startpos)
  )
# 331 "grammar__mock.ml.mock"
     : 'tv_ty) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 138 "grammar.mly"
                 _3
# 336 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 138 "grammar.mly"
          _2
# 340 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 138 "grammar.mly"
   _1
# 344 "grammar__mock.ml.mock"
   : 'tv_lvalue) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 138 "grammar.mly"
                      ( 
    AssignExp {
      var = _1;
      exp = _3;
      pos = _startpos;
    }
  )
# 355 "grammar__mock.ml.mock"
     : 'tv_stmt) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 40 "grammar.mly"
       _2
# 360 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 40 "grammar.mly"
   _1
# 364 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 40 "grammar.mly"
            ( _1 )
# 369 "grammar__mock.ml.mock"
     : 'tv_program) : (
# 18 "grammar.mly"
      (Absyn.exp)
# 373 "grammar__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 285 "grammar.mly"
    ( [] )
# 379 "grammar__mock.ml.mock"
     : 'tv_not_tydecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 284 "grammar.mly"
          _2
# 384 "grammar__mock.ml.mock"
   : 'tv_decs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 284 "grammar.mly"
   _1
# 388 "grammar__mock.ml.mock"
   : 'tv_vardec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 284 "grammar.mly"
                ( _1 :: _2 )
# 393 "grammar__mock.ml.mock"
     : 'tv_not_tydecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 283 "grammar.mly"
           _2
# 398 "grammar__mock.ml.mock"
   : 'tv_not_fundecs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 283 "grammar.mly"
   _1
# 402 "grammar__mock.ml.mock"
   : 'tv_fundecs) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 283 "grammar.mly"
                        (FunctionDec(_1) :: _2)
# 407 "grammar__mock.ml.mock"
     : 'tv_not_tydecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 281 "grammar.mly"
    ( [] )
# 413 "grammar__mock.ml.mock"
     : 'tv_not_fundecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 280 "grammar.mly"
          _2
# 418 "grammar__mock.ml.mock"
   : 'tv_decs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 280 "grammar.mly"
   _1
# 422 "grammar__mock.ml.mock"
   : 'tv_vardec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 280 "grammar.mly"
                ( _1 :: _2)
# 427 "grammar__mock.ml.mock"
     : 'tv_not_fundecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 279 "grammar.mly"
          _2
# 432 "grammar__mock.ml.mock"
   : 'tv_not_tydecs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 279 "grammar.mly"
   _1
# 436 "grammar__mock.ml.mock"
   : 'tv_tydecs) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 279 "grammar.mly"
                      ( TypeDec(_1) :: _2)
# 441 "grammar__mock.ml.mock"
     : 'tv_not_fundecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 374 "grammar.mly"
                 _4
# 446 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 374 "grammar.mly"
             _3
# 450 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 374 "grammar.mly"
      _2
# 454 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 374 "grammar.mly"
   _1
# 458 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 462 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 374 "grammar.mly"
                         ( 
    SubscriptVar(
      SimpleVar(Symbol.symbol _1, _startpos),
      _3 ,
      _startpos
    )
  )
# 473 "grammar__mock.ml.mock"
     : 'tv_lvalue) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 371 "grammar.mly"
                     _4
# 478 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 371 "grammar.mly"
                 _3
# 482 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 371 "grammar.mly"
          _2
# 486 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 371 "grammar.mly"
   _1
# 490 "grammar__mock.ml.mock"
   : 'tv_lvalue) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 371 "grammar.mly"
                             ( 
    SubscriptVar (_1 , _3 , _startpos)
  )
# 497 "grammar__mock.ml.mock"
     : 'tv_lvalue) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 370 "grammar.mly"
              _3
# 502 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 506 "grammar__mock.ml.mock"
  )) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 370 "grammar.mly"
          _2
# 510 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 370 "grammar.mly"
   _1
# 514 "grammar__mock.ml.mock"
   : 'tv_lvalue) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 370 "grammar.mly"
                  ( FieldVar(_1, Symbol.symbol _3, _startpos))
# 519 "grammar__mock.ml.mock"
     : 'tv_lvalue) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 369 "grammar.mly"
   _1
# 524 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 528 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 369 "grammar.mly"
       ( SimpleVar (Symbol.symbol _1, _startpos))
# 533 "grammar__mock.ml.mock"
     : 'tv_lvalue) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 154 "grammar.mly"
                   _5
# 538 "grammar__mock.ml.mock"
   : 'tv_idexpseq) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 154 "grammar.mly"
             _4
# 542 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 154 "grammar.mly"
         _3
# 546 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 154 "grammar.mly"
      _2
# 550 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 154 "grammar.mly"
   _1
# 554 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 558 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 154 "grammar.mly"
                             ( 
    (Symbol.symbol _1, _3, _startpos) :: _5
  )
# 565 "grammar__mock.ml.mock"
     : 'tv_idexpseq) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 151 "grammar.mly"
         _3
# 570 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 151 "grammar.mly"
      _2
# 574 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 151 "grammar.mly"
   _1
# 578 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 582 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 151 "grammar.mly"
              ( 
    [(Symbol.symbol _1, _3, _startpos)]
  )
# 589 "grammar__mock.ml.mock"
     : 'tv_idexpseq) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 348 "grammar.mly"
 _1
# 594 "grammar__mock.ml.mock"
   : 'tv_fundec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 348 "grammar.mly"
         ( [_1] )
# 599 "grammar__mock.ml.mock"
     : 'tv_fundecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 347 "grammar.mly"
        _2
# 604 "grammar__mock.ml.mock"
   : 'tv_fundecs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 347 "grammar.mly"
 _1
# 608 "grammar__mock.ml.mock"
   : 'tv_fundec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 347 "grammar.mly"
                 ( _1 :: _2)
# 613 "grammar__mock.ml.mock"
     : 'tv_fundecs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
                                                       _9
# 618 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__9_ : Lexing.position) (_endpos__9_ : Lexing.position) (_startofs__9_ : int) (_endofs__9_ : int) (_loc__9_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
                                                    _8
# 622 "grammar__mock.ml.mock"
   : unit) (_startpos__8_ : Lexing.position) (_endpos__8_ : Lexing.position) (_startofs__8_ : int) (_endofs__8_ : int) (_loc__8_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
                                            _7
# 626 "grammar__mock.ml.mock"
   : 'tv_type_id) (_startpos__7_ : Lexing.position) (_endpos__7_ : Lexing.position) (_startofs__7_ : int) (_endofs__7_ : int) (_loc__7_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
                                      _6
# 630 "grammar__mock.ml.mock"
   : unit) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
                               _5
# 634 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
                      _4
# 638 "grammar__mock.ml.mock"
   : 'tv_tyfields) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
               _3
# 642 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
            _2
# 646 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 650 "grammar__mock.ml.mock"
  )) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 358 "grammar.mly"
   _1
# 654 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 358 "grammar.mly"
                                                            ( 
    {
      name = Symbol.symbol _2;
      params = _4;
      result = Some (_7, _startpos__7_);
      body = _9;
      pos = _startpos
    }
  )
# 667 "grammar__mock.ml.mock"
     : 'tv_fundec) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
                                         _7
# 672 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__7_ : Lexing.position) (_endpos__7_ : Lexing.position) (_startofs__7_ : int) (_endofs__7_ : int) (_loc__7_ : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
                                      _6
# 676 "grammar__mock.ml.mock"
   : unit) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
                               _5
# 680 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
                      _4
# 684 "grammar__mock.ml.mock"
   : 'tv_tyfields) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
               _3
# 688 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
            _2
# 692 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 696 "grammar__mock.ml.mock"
  )) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 350 "grammar.mly"
   _1
# 700 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 350 "grammar.mly"
                                              ( 
    {name = Symbol.symbol _2;
    params = _4;
    result = None;
    body = _7;
    pos = _startpos
    }
  )
# 712 "grammar__mock.ml.mock"
     : 'tv_fundec) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 149 "grammar.mly"
             _3
# 717 "grammar__mock.ml.mock"
   : 'tv_funcexpseq) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 149 "grammar.mly"
       _2
# 721 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 149 "grammar.mly"
   _1
# 725 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 149 "grammar.mly"
                         ( _1 :: _3 )
# 730 "grammar__mock.ml.mock"
     : 'tv_funcexpseq) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 146 "grammar.mly"
   _1
# 735 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 146 "grammar.mly"
        ( 
    [_1]
  )
# 742 "grammar__mock.ml.mock"
     : 'tv_funcexpseq) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 270 "grammar.mly"
                 _3
# 747 "grammar__mock.ml.mock"
   : 'tv_expseq) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 270 "grammar.mly"
       _2
# 751 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 270 "grammar.mly"
   _1
# 755 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 270 "grammar.mly"
                         ( 
    (_1, _startpos) :: _3
  )
# 762 "grammar__mock.ml.mock"
     : 'tv_expseq) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 267 "grammar.mly"
   _1
# 767 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 267 "grammar.mly"
        ( 
    [(_1, _startpos)]
  )
# 774 "grammar__mock.ml.mock"
     : 'tv_expseq) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 133 "grammar.mly"
          _2
# 779 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 133 "grammar.mly"
   _1
# 783 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 133 "grammar.mly"
                  ( 
    NilExp
  )
# 790 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 130 "grammar.mly"
   _1
# 795 "grammar__mock.ml.mock"
   : 'tv_stmt) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 130 "grammar.mly"
         ( 
    _1
  )
# 802 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 127 "grammar.mly"
   _1
# 807 "grammar__mock.ml.mock"
   : 'tv_lvalue) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 127 "grammar.mly"
           ( 
    VarExp(_1)
  )
# 814 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 124 "grammar.mly"
   _1
# 819 "grammar__mock.ml.mock"
   : (
# 8 "grammar.mly"
       (string)
# 823 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 124 "grammar.mly"
           ( 
    StringExp (_1, _startpos)
  )
# 830 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 121 "grammar.mly"
   _1
# 835 "grammar__mock.ml.mock"
   : (
# 7 "grammar.mly"
       (int)
# 839 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 121 "grammar.mly"
        ( 
    IntExp (_1)
  )
# 846 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 114 "grammar.mly"
                      _5
# 851 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 114 "grammar.mly"
               _4
# 855 "grammar__mock.ml.mock"
   : 'tv_expseq) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 114 "grammar.mly"
            _3
# 859 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 114 "grammar.mly"
       _2
# 863 "grammar__mock.ml.mock"
   : 'tv_decs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 114 "grammar.mly"
   _1
# 867 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 114 "grammar.mly"
                           ( 
    LetExp {
      decs = _2;
      body = SeqExp(_4);
      pos = _startpos
    }
  )
# 878 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 111 "grammar.mly"
   _1
# 883 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 111 "grammar.mly"
          ( 
    BreakExp (_startpos)
  )
# 890 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
                               _8
# 895 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__8_ : Lexing.position) (_endpos__8_ : Lexing.position) (_startofs__8_ : int) (_endofs__8_ : int) (_loc__8_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
                            _7
# 899 "grammar__mock.ml.mock"
   : unit) (_startpos__7_ : Lexing.position) (_endpos__7_ : Lexing.position) (_startofs__7_ : int) (_endofs__7_ : int) (_loc__7_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
                        _6
# 903 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
                     _5
# 907 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
                 _4
# 911 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
          _3
# 915 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
       _2
# 919 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 923 "grammar__mock.ml.mock"
  )) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 101 "grammar.mly"
   _1
# 927 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 101 "grammar.mly"
                                    ( 
    ForExp {
      var = Symbol.symbol _2;
      escape = ref true;
      lo = _4;
      hi = _6;
      body = _8;
      pos = _startpos
    }
  )
# 941 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 94 "grammar.mly"
                _4
# 946 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 94 "grammar.mly"
             _3
# 950 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 94 "grammar.mly"
         _2
# 954 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 94 "grammar.mly"
   _1
# 958 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 94 "grammar.mly"
                     ( 
    WhileExp {
      test = _2;
      body = _4;
      pos = _startpos
    }
  )
# 969 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 86 "grammar.mly"
               _4
# 974 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 86 "grammar.mly"
          _3
# 978 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 86 "grammar.mly"
      _2
# 982 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 86 "grammar.mly"
   _1
# 986 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 86 "grammar.mly"
                    ( 
    IfExp {
      test = _2;
      then_ = _4;
      else_ = None;
      pos = _startpos
    }
  )
# 998 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 78 "grammar.mly"
                        _6
# 1003 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 78 "grammar.mly"
                   _5
# 1007 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 78 "grammar.mly"
               _4
# 1011 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 78 "grammar.mly"
          _3
# 1015 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 78 "grammar.mly"
      _2
# 1019 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 78 "grammar.mly"
   _1
# 1023 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 78 "grammar.mly"
                             ( 
    IfExp {
      test = _2;
      then_ = _4;
      else_ = Some _6;
      pos = _startpos
    }
  )
# 1035 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 72 "grammar.mly"
                           _6
# 1040 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__6_ : Lexing.position) (_endpos__6_ : Lexing.position) (_startofs__6_ : int) (_endofs__6_ : int) (_loc__6_ : Lexing.position * Lexing.position) (
# 72 "grammar.mly"
                        _5
# 1044 "grammar__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 72 "grammar.mly"
                 _4
# 1048 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 72 "grammar.mly"
             _3
# 1052 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 72 "grammar.mly"
      _2
# 1056 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 72 "grammar.mly"
   _1
# 1060 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 1064 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 72 "grammar.mly"
                                ( 
      ArrayExp {typ = Symbol.symbol _1; 
      size = _3;
      init = _6;
      pos = _startpos}
  )
# 1074 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 69 "grammar.mly"
             _3
# 1079 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 69 "grammar.mly"
      _2
# 1083 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 69 "grammar.mly"
   _1
# 1087 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 1091 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 69 "grammar.mly"
                     ( 
    RecordExp {fields = []; typ = Symbol.symbol _1; pos = _startpos}
  )
# 1098 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 66 "grammar.mly"
                      _4
# 1103 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 66 "grammar.mly"
             _3
# 1107 "grammar__mock.ml.mock"
   : 'tv_idexpseq) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 66 "grammar.mly"
      _2
# 1111 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 66 "grammar.mly"
   _1
# 1115 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 1119 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 66 "grammar.mly"
                              ( 
    RecordExp {fields = _3; typ = Symbol.symbol _1; pos = _startpos}
  )
# 1126 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 63 "grammar.mly"
   _1
# 1131 "grammar__mock.ml.mock"
   : 'tv_bool) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 63 "grammar.mly"
         ( 
    _1
  )
# 1138 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 60 "grammar.mly"
   _1
# 1143 "grammar__mock.ml.mock"
   : 'tv_comp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 60 "grammar.mly"
         ( 
    _1
  )
# 1150 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 57 "grammar.mly"
   _1
# 1155 "grammar__mock.ml.mock"
   : 'tv_arith) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 57 "grammar.mly"
          ( 
    _1
  )
# 1162 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 51 "grammar.mly"
             _3
# 1167 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 51 "grammar.mly"
      _2
# 1171 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 51 "grammar.mly"
   _1
# 1175 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 1179 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 52 "grammar.mly"
  ( 
    CallExp {func = Symbol.symbol _1;
            args = [];
            pos = _startpos}
  )
# 1188 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 47 "grammar.mly"
                        _4
# 1193 "grammar__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 47 "grammar.mly"
             _3
# 1197 "grammar__mock.ml.mock"
   : 'tv_funcexpseq) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 47 "grammar.mly"
      _2
# 1201 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 47 "grammar.mly"
   _1
# 1205 "grammar__mock.ml.mock"
   : (
# 6 "grammar.mly"
       (string)
# 1209 "grammar__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 48 "grammar.mly"
  ( CallExp {func=Symbol.symbol _1; 
            args = _3;
            pos = _startpos})
# 1216 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 45 "grammar.mly"
                 _3
# 1221 "grammar__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 45 "grammar.mly"
          _2
# 1225 "grammar__mock.ml.mock"
   : 'tv_expseq) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 45 "grammar.mly"
   _1
# 1229 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 46 "grammar.mly"
  ( SeqExp(_2) )
# 1234 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 43 "grammar.mly"
   _1
# 1239 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 44 "grammar.mly"
  ( NilExp )
# 1244 "grammar__mock.ml.mock"
     : 'tv_exp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 277 "grammar.mly"
    ( [] )
# 1250 "grammar__mock.ml.mock"
     : 'tv_decs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 276 "grammar.mly"
           _2
# 1255 "grammar__mock.ml.mock"
   : 'tv_not_fundecs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 276 "grammar.mly"
   _1
# 1259 "grammar__mock.ml.mock"
   : 'tv_fundecs) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 276 "grammar.mly"
                        ( FunctionDec(_1) :: _2)
# 1264 "grammar__mock.ml.mock"
     : 'tv_decs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 275 "grammar.mly"
          _2
# 1269 "grammar__mock.ml.mock"
   : 'tv_decs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 275 "grammar.mly"
   _1
# 1273 "grammar__mock.ml.mock"
   : 'tv_vardec) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 275 "grammar.mly"
                ( _1 :: _2)
# 1278 "grammar__mock.ml.mock"
     : 'tv_decs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 274 "grammar.mly"
          _2
# 1283 "grammar__mock.ml.mock"
   : 'tv_not_tydecs) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 274 "grammar.mly"
   _1
# 1287 "grammar__mock.ml.mock"
   : 'tv_tydecs) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 274 "grammar.mly"
                      ( TypeDec(_1) :: _2)
# 1292 "grammar__mock.ml.mock"
     : 'tv_decs) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 239 "grammar.mly"
           _3
# 1297 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 239 "grammar.mly"
       _2
# 1301 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 239 "grammar.mly"
   _1
# 1305 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 239 "grammar.mly"
                ( 
    OpExp {
    left = _1;
    oper = NeqOp;
    right = _3;
    pos = _startpos
    }
  )
# 1317 "grammar__mock.ml.mock"
     : 'tv_comp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 231 "grammar.mly"
          _3
# 1322 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 231 "grammar.mly"
       _2
# 1326 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 231 "grammar.mly"
   _1
# 1330 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 231 "grammar.mly"
               ( 
    OpExp {
    left = _1;
    oper = LtOp;
    right = _3;
    pos = _startpos
    }
  )
# 1342 "grammar__mock.ml.mock"
     : 'tv_comp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 223 "grammar.mly"
          _3
# 1347 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 223 "grammar.mly"
       _2
# 1351 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 223 "grammar.mly"
   _1
# 1355 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 223 "grammar.mly"
               ( 
    OpExp {
    left = _1;
    oper = GtOp;
    right = _3;
    pos = _startpos
    }
  )
# 1367 "grammar__mock.ml.mock"
     : 'tv_comp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 216 "grammar.mly"
          _3
# 1372 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 216 "grammar.mly"
       _2
# 1376 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 216 "grammar.mly"
   _1
# 1380 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 216 "grammar.mly"
               ( 
        OpExp {
    left = _1;
    oper = GeOp;
    right = _3;
    pos = _startpos }
  )
# 1391 "grammar__mock.ml.mock"
     : 'tv_comp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 208 "grammar.mly"
          _3
# 1396 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 208 "grammar.mly"
       _2
# 1400 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 208 "grammar.mly"
   _1
# 1404 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 208 "grammar.mly"
               ( 
    OpExp {
    left = _1;
    oper = LeOp;
    right = _3;
    pos = _startpos
    }
  )
# 1416 "grammar__mock.ml.mock"
     : 'tv_comp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 200 "grammar.mly"
          _3
# 1421 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 200 "grammar.mly"
       _2
# 1425 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 200 "grammar.mly"
   _1
# 1429 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 200 "grammar.mly"
               ( 
    OpExp {
      left = _1;
      oper = EqOp;
      right = _3;
      pos = _startpos
    }
  )
# 1441 "grammar__mock.ml.mock"
     : 'tv_comp) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 257 "grammar.mly"
          _3
# 1446 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 257 "grammar.mly"
       _2
# 1450 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 257 "grammar.mly"
   _1
# 1454 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 257 "grammar.mly"
               ( 
    IfExp
    {
      test = _1;
      then_ = (IntExp 1);
      else_ = Some (_3);
      pos = _startpos
    }
  )
# 1467 "grammar__mock.ml.mock"
     : 'tv_bool) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 248 "grammar.mly"
           _3
# 1472 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 248 "grammar.mly"
       _2
# 1476 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 248 "grammar.mly"
   _1
# 1480 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 248 "grammar.mly"
                ( 
    IfExp
    {
      test = _1;
      then_ = _3;
      else_ = Some (IntExp 0);
      pos = _startpos
    }
  )
# 1493 "grammar__mock.ml.mock"
     : 'tv_bool) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 190 "grammar.mly"
         _2
# 1498 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 190 "grammar.mly"
   _1
# 1502 "grammar__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 190 "grammar.mly"
                            ( 
    OpExp {
      left = IntExp (0);
      oper = MinusOp;
      right = _2;
      pos = _startpos
    }
  )
# 1514 "grammar__mock.ml.mock"
     : 'tv_arith) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 182 "grammar.mly"
              _3
# 1519 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 182 "grammar.mly"
       _2
# 1523 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 182 "grammar.mly"
   _1
# 1527 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 182 "grammar.mly"
                   ( 
    OpExp {
      left = _1;
      oper = DivideOp;
      right = _3;
      pos = _startpos
    }
  )
# 1539 "grammar__mock.ml.mock"
     : 'tv_arith) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 174 "grammar.mly"
             _3
# 1544 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 174 "grammar.mly"
       _2
# 1548 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 174 "grammar.mly"
   _1
# 1552 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 174 "grammar.mly"
                  (   
    OpExp {
      left = _1;
      oper = TimesOp;
      right = _3;
      pos = _startpos
    }
  )
# 1564 "grammar__mock.ml.mock"
     : 'tv_arith) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 166 "grammar.mly"
             _3
# 1569 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 166 "grammar.mly"
       _2
# 1573 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 166 "grammar.mly"
   _1
# 1577 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 166 "grammar.mly"
                  ( 
    OpExp {
      left = _1;
      oper = MinusOp;
      right = _3;
      pos = _startpos
    }
  )
# 1589 "grammar__mock.ml.mock"
     : 'tv_arith) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 158 "grammar.mly"
            _3
# 1594 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 158 "grammar.mly"
       _2
# 1598 "grammar__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 158 "grammar.mly"
   _1
# 1602 "grammar__mock.ml.mock"
   : 'tv_exp) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 158 "grammar.mly"
                 ( 
    OpExp {
      left = _1;
      oper = PlusOp;
      right = _3;
      pos = _startpos;
    }
  )
# 1614 "grammar__mock.ml.mock"
     : 'tv_arith) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_vardec * 'tv_type_id * 'tv_tyfields * 'tv_tydecs * 'tv_tydec * 'tv_ty * 'tv_stmt * 'tv_program * 'tv_not_tydecs * 'tv_not_fundecs * 'tv_lvalue * 'tv_idexpseq * 'tv_fundecs * 'tv_fundec * 'tv_funcexpseq * 'tv_expseq * 'tv_exp * 'tv_decs * 'tv_comp * 'tv_bool * 'tv_arith)

and menhir_end_marker =
  0

# 383 "grammar.mly"
  
# 1623 "grammar__mock.ml.mock"
